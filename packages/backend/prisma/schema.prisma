// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// prisma 그냥 client는 안씀
// generator client {
//   provider = "prisma-client-js"
// }

generator kysely {
  provider = "prisma-kysely"

  // Optionally provide a destination directory for the generated file
  // and a filename of your choice
  output    = "../src/tables"
  fileName  = "codegen.ts"
  camelCase = true
}

datasource db {
  // provider=sqlite이면 Json 필드를 쓸 수 없다.
  // 어차피 최종 결과물은 mysql이 될거니까 mysql 기준으로 작성
  provider = "mysql"

  // https://www.prisma.io/docs/guides/development-environment/environment-variables/managing-env-files-and-setting-variables
  // cp .env.development .env
  // dotenv-cli 같은거 쓰는것도 방법인데 db 주소는 자주 안바뀔거니까 무식하게 대응
  url = env("PRISMA_DATABASE_URL")
}

// TODO: 유저 인증을 공유할 방법이 있을까?
model User {
  id Int @id @default(autoincrement())

  username String @unique
  password String

  created_at DateTime @default(now())
  updated_at DateTime @default(dbgenerated("CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)")) @updatedAt

  @@map("hasuki_user")
}

model Playlist {
  id Int @id @default(autoincrement())

  // youtube에서 사용되는 playlist id 그대로 저장
  naive_id String @unique
  url      String
  title    String

  estimated_item_count Int
  views                Int

  // example: "Last updated on Dec 8, 2023"
  last_updated String

  description String?

  // example: everyone
  visibility String

  // author: Author?
  // author

  payload Json

  created_at DateTime @default(now())
  updated_at DateTime @default(dbgenerated("CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)")) @updatedAt

  @@map("hasuki_playlist")
}

model Author {
  id Int @id @default(autoincrement())

  url        String
  channel_id String @unique
  name       String

  payload Json

  created_at DateTime @default(now())
  updated_at DateTime @default(dbgenerated("CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)")) @updatedAt

  @@map("hasuki_author")
}

model PlaylistItem {
  id Int @id @default(autoincrement())

  playlist_id Int

  title     String
  index     Int

  // 플레이리스트에 같은 곡이 2번 들어갈수 있다.
  naive_id  String
  short_url String
  url       String

  // Author?

  is_live      Boolean
  // example: "2:14"
  duration     String
  duration_sec Int
  is_playable  Boolean

  payload Json

  created_at DateTime @default(now())
  updated_at DateTime @default(dbgenerated("CURRENT_TIMESTAMP(3) ON UPDATE CURRENT_TIMESTAMP(3)")) @updatedAt

  @@index([playlist_id])
  @@map("hasuki_playlist_item")
}
